---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '@memsched/ui/styles';
import interWoff2 from '@fontsource-variable/inter/files/inter-latin-wght-normal.woff2?url';
import geistMonoWoff2 from '@fontsource/geist-mono/files/geist-mono-latin-400-normal.woff2?url';
import fs from 'fs';

interface Props {
  title: string;
  description: string;
  image?: string;
  twitterCreator?: string;
  pubDate?: Date;
  updatedDate?: Date;
}

const {
  title,
  description,
  image = 'opengraph.png',
  twitterCreator,
  pubDate,
  updatedDate,
} = Astro.props;

const pathname = Astro.url.pathname.replace('/blog', '').replace('.html', '');
const fsImagePath = './public' + pathname + '/' + image;
if (!fs.existsSync(fsImagePath)) {
  throw new Error(`Open Graph Image ${fsImagePath} does not exist for ${pathname}`);
}

const newPathname = Astro.url.pathname.replace('.html', '');
const newUrl = new URL(newPathname, Astro.url);
const imageFullPath = newUrl + '/' + image;
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Preload fonts -->
<link rel="preload" as="font" type="font/woff2" href={interWoff2} crossorigin="anonymous" />
<link rel="preload" as="font" type="font/woff2" href={geistMonoWoff2} crossorigin="anonymous" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="robots" content="index, follow" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageFullPath} />
<meta property="og:image:alt" content={title} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={imageFullPath} />
<meta property="twitter:image:alt" content={title} />
{twitterCreator && <meta property="twitter:creator" content={twitterCreator} />}

<!-- JSON-LD for Articles -->
{
  Astro.url.pathname.includes('/posts/') && (
    <script
      is:inline
      type="application/ld+json"
      set:html={JSON.stringify({
        '@context': 'https://schema.org',
        '@type': 'Article',
        headline: title,
        description: description,
        image: imageFullPath,
        author: {
          '@type': 'Person',
          name: twitterCreator ? twitterCreator.replace('@', '') : 'MEMsched',
        },
        publisher: {
          '@type': 'Organization',
          name: 'MEMsched',
          logo: {
            '@type': 'ImageObject',
            url: new URL('/favicon.svg', Astro.url).toString(),
          },
        },
        datePublished: pubDate ? new Date(pubDate).toISOString() : null,
        dateModified: updatedDate
          ? new Date(updatedDate).toISOString()
          : pubDate
            ? new Date(pubDate).toISOString()
            : null,
        mainEntityOfPage: {
          '@type': 'WebPage',
          '@id': Astro.url.toString(),
        },
      }).replace(/"null"/g, 'null')}
    />
  )
}

<!-- Umami Analytics -->
{
  import.meta.env.PROD && (
    <script
      data-website-id="048e05e6-5b46-463f-898e-7fb2d8f467e8"
      defer
      src="https://cloud.umami.is/script.js"
      is:inline
    />
  )
}

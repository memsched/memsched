---
import type { CollectionEntry } from 'astro:content';
import BaseLayout from './BaseLayout.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'] & {
  id?: string;
};

const { title, description, pubDate, updatedDate, heroImage, id } = Astro.props;

// Calculate estimated reading time (240 words per minute)
function getReadingTime(content: string) {
  const wordsPerMinute = 240;
  const words = content.trim().split(/\s+/).length;
  const readingTime = Math.ceil(words / wordsPerMinute);
  return readingTime < 1 ? 1 : readingTime;
}

// Get content from the slot to calculate reading time
const content = await Astro.slots.render('default');
const readingTime = getReadingTime(content);
---

<BaseLayout title={title} description={description}>
  <div class="bg-dotted-fade bg-back py-6 border-b w-full">
    <div class="main-container">
      <nav class="flex" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-2 text-sm">
          <li>
            <a href="/" class="text-muted-foreground hover:text-primary transition-colors">Home</a>
          </li>
          <li class="flex items-center">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="text-muted-foreground"><path d="m9 18 6-6-6-6"></path></svg
            >
            <span class="ml-2 text-foreground font-medium truncate" title={title}
              >{title}</span
            >
          </li>
        </ol>
      </nav>
    </div>
  </div>

  <div class="main-container">
    <article
      class="mx-auto prose dark:prose-invert prose-zinc lg:prose-lg pt-10 max-sm:pt-6 pb-16 leading-snug"
    >
      {heroImage && <img src={heroImage} alt="" class="w-full h-48 object-cover rounded-lg " />}
      <h1 class="!mb-3 !mt-10">{title}</h1>
      <div class="flex flex-wrap gap-2 text-muted-foreground mb-8 text-sm">
        <div class="flex items-center">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="14"
            height="14"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="mr-1"
            ><rect width="18" height="18" x="3" y="4" rx="2" ry="2"></rect><line
              x1="16"
              x2="16"
              y1="2"
              y2="6"></line><line x1="8" x2="8" y1="2" y2="6"></line><line
              x1="3"
              x2="21"
              y1="10"
              y2="10"></line></svg
          >
          <FormattedDate date={pubDate} />
        </div>
        {
          updatedDate && (
            <div class="flex items-center">
              <span class="mx-1">•</span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="14"
                height="14"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="mr-1"
              >
                <path d="M11 2a2 2 0 0 0-2 2v5H4a2 2 0 0 0-2 2v2c0 1.1.9 2 2 2h5v5c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-5h5a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-5V4a2 2 0 0 0-2-2h-2z" />
              </svg>
              <span>Updated: </span>
              <FormattedDate date={updatedDate} />
            </div>
          )
        }
        <div class="flex items-center">
          <span class="mx-1">•</span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="14"
            height="14"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="mr-1"
            ><circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"
            ></polyline></svg
          >
          <span>{readingTime} min read</span>
        </div>
      </div>
      <slot />

      {
        id && (
          <div class="mt-16 pt-8 border-t border-border">
            <a
              href="/blog"
              class="inline-flex items-center text-primary text-sm font-medium hover:underline"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="mr-1"
              >
                <path d="m15 18-6-6 6-6" />
              </svg>
              Back to all articles
            </a>
          </div>
        )
      }
    </article>
  </div>
</BaseLayout>
